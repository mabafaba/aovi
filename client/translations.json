


class TextComponent extends HTMLElement {
    constructor() {
        super();
        this.attachShadow({ mode: 'open' });
        this.id='';
    }

    connectedCallback() {
        this.id = this.getAttribute('id') || '';
    }
}

customElements.define('text', TextComponent);



class Translator {
    constructor(translations, defaultLanguage = 'en') {
        this.translations = translations;
        this.validateTranslations();
        this.translate(defaultLanguage);
    }

    validateTranslations() {

        if (typeof this.translations !== 'object' || this.translations === null) {
            throw new Error('Translations should be a non-null object');
        }

        const firstKey = Object.keys(this.translations)[0];
        if (typeof this.translations[firstKey] !== 'object' || this.translations[firstKey] === null) {
            throw new Error('Each translation entry should be a non-null object');
        }

        const languages = Object.keys(this.translations[Object.keys(this.translations)[0]]);
        const missingTranslations = {};

        Object.keys(this.translations).forEach((id) => {
            languages.forEach((language) => {
                if (!this.translations[id][language]) {
                    if (!missingTranslations[id]) {
                        missingTranslations[id] = [];
                    }
                    missingTranslations[id].push(language);
                }
            });
        });

        if (Object.keys(missingTranslations).length > 0) {
            console.warn('Missing translations:', missingTranslations);
        } else {
            console.log('All translations are present.');
        }


        // check if all text elements have a corresponding translation
        const textElements = document.querySelectorAll('text');
        textElements.forEach((element) => {
            const id = element.id;
            if (!this.translations[id]) {
                console.warn(`No text found for ${id}`);
            }
        });
        
    }

    translate(language) {
        const textElements = document.querySelectorAll('text');
        textElements.forEach((element) => {
            const id = element.id;
            if(!this.translations[id]){

                console.warn(`No text found for ${id}`);
                return;
            }
            if(!this.translations[id][language]){
                console.warn(`No text found for ${id} in language ${language}`);
                
                return;
            }
            const content = this.translations[id][language];
        
            try{
            element.shadowRoot.innerHTML = content;
            }
            catch(e){
                console.warn(`Error setting text for ${id} in language ${language}`, e);
            }
        });
    }
}


// translator
let translator = null;
fetch('/translations.json')
    .then(response => response.json())
    .then(data => {
        translator = new Translator(data);
    });


translations = {
    "login": {
        "en": "Login",
        "es": "Iniciar sesión",
        "pt": "Entrar"
    },
    "logout": {
        "en": "Logout",
        "es": "Cerrar sesión",
        "pt": "Sair"
    },
    "welcome": {
        "en": "Welcome",
        "es": "Bienvenido",
        "pt": "Bem-vindo"
    },
    "comment": {
        "en": "Comment",
        "es": "Comentario",
        "pt": "Comentário"
    }

}
